# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#AM_CFLAGS = -std=c99 -Wall -Wextra -Werror -Wstrict-prototypes -Wredundant-decls -Wshadow -pedantic -fno-strict-aliasing -D_POSIX_C_SOURCE=200112L -D_XOPEN_SOURCE=600 -O2 -D_SVID_SOURCE


pkgdatadir = $(datadir)/scratchserver
pkgincludedir = $(includedir)/scratchserver
pkglibdir = $(libdir)/scratchserver
pkglibexecdir = $(libexecdir)/scratchserver
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
sbin_PROGRAMS = atar$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
PROGRAMS = $(sbin_PROGRAMS)
am_atar_OBJECTS = tar.$(OBJEXT) xfuncs_printf.$(OBJEXT) \
	llist.$(OBJEXT) verror_msg.$(OBJEXT) wfopen_input.$(OBJEXT) \
	last_char_is.$(OBJEXT) messages.$(OBJEXT) xfunc_die.$(OBJEXT) \
	default_error_retval.$(OBJEXT) wfopen.$(OBJEXT) \
	perror_msg.$(OBJEXT) get_line_from_file.$(OBJEXT) \
	procps.$(OBJEXT) xreadlink.$(OBJEXT) safe_strncpy.$(OBJEXT) \
	get_header_tar.$(OBJEXT) copyfd.$(OBJEXT) \
	find_list_entry.$(OBJEXT) header_verbose_list.$(OBJEXT) \
	recursive_action.$(OBJEXT) init_handle.$(OBJEXT) \
	header_list.$(OBJEXT) seek_by_read.$(OBJEXT) \
	data_extract_all.$(OBJEXT) filter_accept_reject_list.$(OBJEXT) \
	data_extract_to_stdout.$(OBJEXT) data_skip.$(OBJEXT) \
	make_directory.$(OBJEXT) seek_by_jump.$(OBJEXT) \
	filter_accept_all.$(OBJEXT) header_skip.$(OBJEXT) \
	concat_subpath_file.$(OBJEXT) concat_path_file.$(OBJEXT) \
	mode_string.$(OBJEXT) xfuncs.$(OBJEXT) full_write.$(OBJEXT) \
	xatonum.$(OBJEXT) safe_write.$(OBJEXT) read_printf.$(OBJEXT) \
	read.$(OBJEXT) bb_strtonum.$(OBJEXT) data_align.$(OBJEXT) \
	safe_poll.$(OBJEXT) get_last_path_component.$(OBJEXT) \
	platform.$(OBJEXT) xrealloc_vector.$(OBJEXT) bb_pwd.$(OBJEXT) \
	appletlib.$(OBJEXT)
atar_OBJECTS = $(am_atar_OBJECTS)
atar_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(atar_SOURCES)
DIST_SOURCES = $(atar_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = scratchserver
PACKAGE_BUGREPORT = dhacklove@163.com
PACKAGE_NAME = atar
PACKAGE_STRING = atar 0.0.1
PACKAGE_TARNAME = atar
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.0.1
abs_builddir = /home/sxkj26/workspace/andtar-2/src
abs_srcdir = /home/sxkj26/workspace/andtar-2/src
abs_top_builddir = /home/sxkj26/workspace/andtar-2
abs_top_srcdir = /home/sxkj26/workspace/andtar-2
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sxkj26/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CFLAGS = -Wunused-function -Wall

#if ENABLE_DEBUG_BUILD
#AM_CFLAGS += -g 
#else
#AM_CFLAGS += -DNDEBUG
#endif
INCLUDE = -I.
TAR_PREFIX := .
atar_SOURCES = $(TAR_PREFIX)/tar.cpp \
                   $(TAR_PREFIX)/xfuncs_printf.cpp \
                   $(TAR_PREFIX)/llist.cpp \
                   $(TAR_PREFIX)/verror_msg.cpp \
                   $(TAR_PREFIX)/wfopen_input.cpp \
                   $(TAR_PREFIX)/last_char_is.cpp \
                   $(TAR_PREFIX)/messages.cpp \
                   $(TAR_PREFIX)/xfunc_die.cpp \
                   $(TAR_PREFIX)/default_error_retval.cpp \
                   $(TAR_PREFIX)/wfopen.cpp \
                   $(TAR_PREFIX)/perror_msg.cpp \
                   $(TAR_PREFIX)/get_line_from_file.cpp \
                   $(TAR_PREFIX)/procps.cpp \
                   $(TAR_PREFIX)/xreadlink.cpp \
                   $(TAR_PREFIX)/safe_strncpy.cpp \
                   $(TAR_PREFIX)/get_header_tar.cpp \
                   $(TAR_PREFIX)/copyfd.cpp \
                   $(TAR_PREFIX)/find_list_entry.cpp \
                   $(TAR_PREFIX)/header_verbose_list.cpp\
                   $(TAR_PREFIX)/recursive_action.cpp \
                   $(TAR_PREFIX)/init_handle.cpp \
                   $(TAR_PREFIX)/header_list.cpp \
                   $(TAR_PREFIX)/seek_by_read.cpp \
                   $(TAR_PREFIX)/data_extract_all.cpp \
                   $(TAR_PREFIX)/filter_accept_reject_list.cpp \
                   $(TAR_PREFIX)/data_extract_to_stdout.cpp \
                   $(TAR_PREFIX)/data_skip.cpp \
                   $(TAR_PREFIX)/make_directory.cpp \
                   $(TAR_PREFIX)/seek_by_jump.cpp \
                   $(TAR_PREFIX)/filter_accept_all.cpp\
                   $(TAR_PREFIX)/header_skip.cpp \
                   $(TAR_PREFIX)/concat_subpath_file.cpp \
                   $(TAR_PREFIX)/concat_path_file.cpp \
                   $(TAR_PREFIX)/mode_string.cpp \
                   $(TAR_PREFIX)/xfuncs.cpp \
                   $(TAR_PREFIX)/full_write.cpp \
                   $(TAR_PREFIX)/xatonum.cpp\
                   $(TAR_PREFIX)/safe_write.cpp \
                   $(TAR_PREFIX)/read_printf.cpp \
                   $(TAR_PREFIX)/read.cpp \
                   $(TAR_PREFIX)/bb_strtonum.cpp\
                   $(TAR_PREFIX)/data_align.cpp \
                   $(TAR_PREFIX)/safe_poll.cpp \
                   $(TAR_PREFIX)/get_last_path_component.cpp\
                   $(TAR_PREFIX)/platform.cpp \
                   $(TAR_PREFIX)/xrealloc_vector.cpp \
                   $(TAR_PREFIX)/bb_pwd.cpp\
                   $(TAR_PREFIX)/appletlib.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
atar$(EXEEXT): $(atar_OBJECTS) $(atar_DEPENDENCIES) $(EXTRA_atar_DEPENDENCIES) 
	@rm -f atar$(EXEEXT)
	$(CXXLINK) $(atar_OBJECTS) $(atar_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/appletlib.Po
include ./$(DEPDIR)/bb_pwd.Po
include ./$(DEPDIR)/bb_strtonum.Po
include ./$(DEPDIR)/concat_path_file.Po
include ./$(DEPDIR)/concat_subpath_file.Po
include ./$(DEPDIR)/copyfd.Po
include ./$(DEPDIR)/data_align.Po
include ./$(DEPDIR)/data_extract_all.Po
include ./$(DEPDIR)/data_extract_to_stdout.Po
include ./$(DEPDIR)/data_skip.Po
include ./$(DEPDIR)/default_error_retval.Po
include ./$(DEPDIR)/filter_accept_all.Po
include ./$(DEPDIR)/filter_accept_reject_list.Po
include ./$(DEPDIR)/find_list_entry.Po
include ./$(DEPDIR)/full_write.Po
include ./$(DEPDIR)/get_header_tar.Po
include ./$(DEPDIR)/get_last_path_component.Po
include ./$(DEPDIR)/get_line_from_file.Po
include ./$(DEPDIR)/header_list.Po
include ./$(DEPDIR)/header_skip.Po
include ./$(DEPDIR)/header_verbose_list.Po
include ./$(DEPDIR)/init_handle.Po
include ./$(DEPDIR)/last_char_is.Po
include ./$(DEPDIR)/llist.Po
include ./$(DEPDIR)/make_directory.Po
include ./$(DEPDIR)/messages.Po
include ./$(DEPDIR)/mode_string.Po
include ./$(DEPDIR)/perror_msg.Po
include ./$(DEPDIR)/platform.Po
include ./$(DEPDIR)/procps.Po
include ./$(DEPDIR)/read.Po
include ./$(DEPDIR)/read_printf.Po
include ./$(DEPDIR)/recursive_action.Po
include ./$(DEPDIR)/safe_poll.Po
include ./$(DEPDIR)/safe_strncpy.Po
include ./$(DEPDIR)/safe_write.Po
include ./$(DEPDIR)/seek_by_jump.Po
include ./$(DEPDIR)/seek_by_read.Po
include ./$(DEPDIR)/tar.Po
include ./$(DEPDIR)/verror_msg.Po
include ./$(DEPDIR)/wfopen.Po
include ./$(DEPDIR)/wfopen_input.Po
include ./$(DEPDIR)/xatonum.Po
include ./$(DEPDIR)/xfunc_die.Po
include ./$(DEPDIR)/xfuncs.Po
include ./$(DEPDIR)/xfuncs_printf.Po
include ./$(DEPDIR)/xreadlink.Po
include ./$(DEPDIR)/xrealloc_vector.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

tar.o: $(TAR_PREFIX)/tar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tar.o -MD -MP -MF $(DEPDIR)/tar.Tpo -c -o tar.o `test -f '$(TAR_PREFIX)/tar.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/tar.cpp
	$(am__mv) $(DEPDIR)/tar.Tpo $(DEPDIR)/tar.Po
#	source='$(TAR_PREFIX)/tar.cpp' object='tar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tar.o `test -f '$(TAR_PREFIX)/tar.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/tar.cpp

tar.obj: $(TAR_PREFIX)/tar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tar.obj -MD -MP -MF $(DEPDIR)/tar.Tpo -c -o tar.obj `if test -f '$(TAR_PREFIX)/tar.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/tar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/tar.cpp'; fi`
	$(am__mv) $(DEPDIR)/tar.Tpo $(DEPDIR)/tar.Po
#	source='$(TAR_PREFIX)/tar.cpp' object='tar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tar.obj `if test -f '$(TAR_PREFIX)/tar.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/tar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/tar.cpp'; fi`

xfuncs_printf.o: $(TAR_PREFIX)/xfuncs_printf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfuncs_printf.o -MD -MP -MF $(DEPDIR)/xfuncs_printf.Tpo -c -o xfuncs_printf.o `test -f '$(TAR_PREFIX)/xfuncs_printf.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfuncs_printf.cpp
	$(am__mv) $(DEPDIR)/xfuncs_printf.Tpo $(DEPDIR)/xfuncs_printf.Po
#	source='$(TAR_PREFIX)/xfuncs_printf.cpp' object='xfuncs_printf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfuncs_printf.o `test -f '$(TAR_PREFIX)/xfuncs_printf.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfuncs_printf.cpp

xfuncs_printf.obj: $(TAR_PREFIX)/xfuncs_printf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfuncs_printf.obj -MD -MP -MF $(DEPDIR)/xfuncs_printf.Tpo -c -o xfuncs_printf.obj `if test -f '$(TAR_PREFIX)/xfuncs_printf.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfuncs_printf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfuncs_printf.cpp'; fi`
	$(am__mv) $(DEPDIR)/xfuncs_printf.Tpo $(DEPDIR)/xfuncs_printf.Po
#	source='$(TAR_PREFIX)/xfuncs_printf.cpp' object='xfuncs_printf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfuncs_printf.obj `if test -f '$(TAR_PREFIX)/xfuncs_printf.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfuncs_printf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfuncs_printf.cpp'; fi`

llist.o: $(TAR_PREFIX)/llist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT llist.o -MD -MP -MF $(DEPDIR)/llist.Tpo -c -o llist.o `test -f '$(TAR_PREFIX)/llist.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/llist.cpp
	$(am__mv) $(DEPDIR)/llist.Tpo $(DEPDIR)/llist.Po
#	source='$(TAR_PREFIX)/llist.cpp' object='llist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o llist.o `test -f '$(TAR_PREFIX)/llist.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/llist.cpp

llist.obj: $(TAR_PREFIX)/llist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT llist.obj -MD -MP -MF $(DEPDIR)/llist.Tpo -c -o llist.obj `if test -f '$(TAR_PREFIX)/llist.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/llist.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/llist.cpp'; fi`
	$(am__mv) $(DEPDIR)/llist.Tpo $(DEPDIR)/llist.Po
#	source='$(TAR_PREFIX)/llist.cpp' object='llist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o llist.obj `if test -f '$(TAR_PREFIX)/llist.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/llist.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/llist.cpp'; fi`

verror_msg.o: $(TAR_PREFIX)/verror_msg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verror_msg.o -MD -MP -MF $(DEPDIR)/verror_msg.Tpo -c -o verror_msg.o `test -f '$(TAR_PREFIX)/verror_msg.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/verror_msg.cpp
	$(am__mv) $(DEPDIR)/verror_msg.Tpo $(DEPDIR)/verror_msg.Po
#	source='$(TAR_PREFIX)/verror_msg.cpp' object='verror_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verror_msg.o `test -f '$(TAR_PREFIX)/verror_msg.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/verror_msg.cpp

verror_msg.obj: $(TAR_PREFIX)/verror_msg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT verror_msg.obj -MD -MP -MF $(DEPDIR)/verror_msg.Tpo -c -o verror_msg.obj `if test -f '$(TAR_PREFIX)/verror_msg.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/verror_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/verror_msg.cpp'; fi`
	$(am__mv) $(DEPDIR)/verror_msg.Tpo $(DEPDIR)/verror_msg.Po
#	source='$(TAR_PREFIX)/verror_msg.cpp' object='verror_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o verror_msg.obj `if test -f '$(TAR_PREFIX)/verror_msg.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/verror_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/verror_msg.cpp'; fi`

wfopen_input.o: $(TAR_PREFIX)/wfopen_input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wfopen_input.o -MD -MP -MF $(DEPDIR)/wfopen_input.Tpo -c -o wfopen_input.o `test -f '$(TAR_PREFIX)/wfopen_input.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/wfopen_input.cpp
	$(am__mv) $(DEPDIR)/wfopen_input.Tpo $(DEPDIR)/wfopen_input.Po
#	source='$(TAR_PREFIX)/wfopen_input.cpp' object='wfopen_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wfopen_input.o `test -f '$(TAR_PREFIX)/wfopen_input.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/wfopen_input.cpp

wfopen_input.obj: $(TAR_PREFIX)/wfopen_input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wfopen_input.obj -MD -MP -MF $(DEPDIR)/wfopen_input.Tpo -c -o wfopen_input.obj `if test -f '$(TAR_PREFIX)/wfopen_input.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/wfopen_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/wfopen_input.cpp'; fi`
	$(am__mv) $(DEPDIR)/wfopen_input.Tpo $(DEPDIR)/wfopen_input.Po
#	source='$(TAR_PREFIX)/wfopen_input.cpp' object='wfopen_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wfopen_input.obj `if test -f '$(TAR_PREFIX)/wfopen_input.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/wfopen_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/wfopen_input.cpp'; fi`

last_char_is.o: $(TAR_PREFIX)/last_char_is.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT last_char_is.o -MD -MP -MF $(DEPDIR)/last_char_is.Tpo -c -o last_char_is.o `test -f '$(TAR_PREFIX)/last_char_is.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/last_char_is.cpp
	$(am__mv) $(DEPDIR)/last_char_is.Tpo $(DEPDIR)/last_char_is.Po
#	source='$(TAR_PREFIX)/last_char_is.cpp' object='last_char_is.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o last_char_is.o `test -f '$(TAR_PREFIX)/last_char_is.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/last_char_is.cpp

last_char_is.obj: $(TAR_PREFIX)/last_char_is.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT last_char_is.obj -MD -MP -MF $(DEPDIR)/last_char_is.Tpo -c -o last_char_is.obj `if test -f '$(TAR_PREFIX)/last_char_is.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/last_char_is.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/last_char_is.cpp'; fi`
	$(am__mv) $(DEPDIR)/last_char_is.Tpo $(DEPDIR)/last_char_is.Po
#	source='$(TAR_PREFIX)/last_char_is.cpp' object='last_char_is.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o last_char_is.obj `if test -f '$(TAR_PREFIX)/last_char_is.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/last_char_is.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/last_char_is.cpp'; fi`

messages.o: $(TAR_PREFIX)/messages.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT messages.o -MD -MP -MF $(DEPDIR)/messages.Tpo -c -o messages.o `test -f '$(TAR_PREFIX)/messages.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/messages.cpp
	$(am__mv) $(DEPDIR)/messages.Tpo $(DEPDIR)/messages.Po
#	source='$(TAR_PREFIX)/messages.cpp' object='messages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o messages.o `test -f '$(TAR_PREFIX)/messages.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/messages.cpp

messages.obj: $(TAR_PREFIX)/messages.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT messages.obj -MD -MP -MF $(DEPDIR)/messages.Tpo -c -o messages.obj `if test -f '$(TAR_PREFIX)/messages.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/messages.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/messages.cpp'; fi`
	$(am__mv) $(DEPDIR)/messages.Tpo $(DEPDIR)/messages.Po
#	source='$(TAR_PREFIX)/messages.cpp' object='messages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o messages.obj `if test -f '$(TAR_PREFIX)/messages.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/messages.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/messages.cpp'; fi`

xfunc_die.o: $(TAR_PREFIX)/xfunc_die.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfunc_die.o -MD -MP -MF $(DEPDIR)/xfunc_die.Tpo -c -o xfunc_die.o `test -f '$(TAR_PREFIX)/xfunc_die.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfunc_die.cpp
	$(am__mv) $(DEPDIR)/xfunc_die.Tpo $(DEPDIR)/xfunc_die.Po
#	source='$(TAR_PREFIX)/xfunc_die.cpp' object='xfunc_die.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfunc_die.o `test -f '$(TAR_PREFIX)/xfunc_die.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfunc_die.cpp

xfunc_die.obj: $(TAR_PREFIX)/xfunc_die.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfunc_die.obj -MD -MP -MF $(DEPDIR)/xfunc_die.Tpo -c -o xfunc_die.obj `if test -f '$(TAR_PREFIX)/xfunc_die.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfunc_die.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfunc_die.cpp'; fi`
	$(am__mv) $(DEPDIR)/xfunc_die.Tpo $(DEPDIR)/xfunc_die.Po
#	source='$(TAR_PREFIX)/xfunc_die.cpp' object='xfunc_die.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfunc_die.obj `if test -f '$(TAR_PREFIX)/xfunc_die.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfunc_die.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfunc_die.cpp'; fi`

default_error_retval.o: $(TAR_PREFIX)/default_error_retval.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT default_error_retval.o -MD -MP -MF $(DEPDIR)/default_error_retval.Tpo -c -o default_error_retval.o `test -f '$(TAR_PREFIX)/default_error_retval.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/default_error_retval.cpp
	$(am__mv) $(DEPDIR)/default_error_retval.Tpo $(DEPDIR)/default_error_retval.Po
#	source='$(TAR_PREFIX)/default_error_retval.cpp' object='default_error_retval.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o default_error_retval.o `test -f '$(TAR_PREFIX)/default_error_retval.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/default_error_retval.cpp

default_error_retval.obj: $(TAR_PREFIX)/default_error_retval.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT default_error_retval.obj -MD -MP -MF $(DEPDIR)/default_error_retval.Tpo -c -o default_error_retval.obj `if test -f '$(TAR_PREFIX)/default_error_retval.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/default_error_retval.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/default_error_retval.cpp'; fi`
	$(am__mv) $(DEPDIR)/default_error_retval.Tpo $(DEPDIR)/default_error_retval.Po
#	source='$(TAR_PREFIX)/default_error_retval.cpp' object='default_error_retval.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o default_error_retval.obj `if test -f '$(TAR_PREFIX)/default_error_retval.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/default_error_retval.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/default_error_retval.cpp'; fi`

wfopen.o: $(TAR_PREFIX)/wfopen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wfopen.o -MD -MP -MF $(DEPDIR)/wfopen.Tpo -c -o wfopen.o `test -f '$(TAR_PREFIX)/wfopen.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/wfopen.cpp
	$(am__mv) $(DEPDIR)/wfopen.Tpo $(DEPDIR)/wfopen.Po
#	source='$(TAR_PREFIX)/wfopen.cpp' object='wfopen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wfopen.o `test -f '$(TAR_PREFIX)/wfopen.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/wfopen.cpp

wfopen.obj: $(TAR_PREFIX)/wfopen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wfopen.obj -MD -MP -MF $(DEPDIR)/wfopen.Tpo -c -o wfopen.obj `if test -f '$(TAR_PREFIX)/wfopen.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/wfopen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/wfopen.cpp'; fi`
	$(am__mv) $(DEPDIR)/wfopen.Tpo $(DEPDIR)/wfopen.Po
#	source='$(TAR_PREFIX)/wfopen.cpp' object='wfopen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wfopen.obj `if test -f '$(TAR_PREFIX)/wfopen.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/wfopen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/wfopen.cpp'; fi`

perror_msg.o: $(TAR_PREFIX)/perror_msg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT perror_msg.o -MD -MP -MF $(DEPDIR)/perror_msg.Tpo -c -o perror_msg.o `test -f '$(TAR_PREFIX)/perror_msg.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/perror_msg.cpp
	$(am__mv) $(DEPDIR)/perror_msg.Tpo $(DEPDIR)/perror_msg.Po
#	source='$(TAR_PREFIX)/perror_msg.cpp' object='perror_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o perror_msg.o `test -f '$(TAR_PREFIX)/perror_msg.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/perror_msg.cpp

perror_msg.obj: $(TAR_PREFIX)/perror_msg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT perror_msg.obj -MD -MP -MF $(DEPDIR)/perror_msg.Tpo -c -o perror_msg.obj `if test -f '$(TAR_PREFIX)/perror_msg.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/perror_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/perror_msg.cpp'; fi`
	$(am__mv) $(DEPDIR)/perror_msg.Tpo $(DEPDIR)/perror_msg.Po
#	source='$(TAR_PREFIX)/perror_msg.cpp' object='perror_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o perror_msg.obj `if test -f '$(TAR_PREFIX)/perror_msg.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/perror_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/perror_msg.cpp'; fi`

get_line_from_file.o: $(TAR_PREFIX)/get_line_from_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_line_from_file.o -MD -MP -MF $(DEPDIR)/get_line_from_file.Tpo -c -o get_line_from_file.o `test -f '$(TAR_PREFIX)/get_line_from_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_line_from_file.cpp
	$(am__mv) $(DEPDIR)/get_line_from_file.Tpo $(DEPDIR)/get_line_from_file.Po
#	source='$(TAR_PREFIX)/get_line_from_file.cpp' object='get_line_from_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_line_from_file.o `test -f '$(TAR_PREFIX)/get_line_from_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_line_from_file.cpp

get_line_from_file.obj: $(TAR_PREFIX)/get_line_from_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_line_from_file.obj -MD -MP -MF $(DEPDIR)/get_line_from_file.Tpo -c -o get_line_from_file.obj `if test -f '$(TAR_PREFIX)/get_line_from_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_line_from_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_line_from_file.cpp'; fi`
	$(am__mv) $(DEPDIR)/get_line_from_file.Tpo $(DEPDIR)/get_line_from_file.Po
#	source='$(TAR_PREFIX)/get_line_from_file.cpp' object='get_line_from_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_line_from_file.obj `if test -f '$(TAR_PREFIX)/get_line_from_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_line_from_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_line_from_file.cpp'; fi`

procps.o: $(TAR_PREFIX)/procps.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT procps.o -MD -MP -MF $(DEPDIR)/procps.Tpo -c -o procps.o `test -f '$(TAR_PREFIX)/procps.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/procps.cpp
	$(am__mv) $(DEPDIR)/procps.Tpo $(DEPDIR)/procps.Po
#	source='$(TAR_PREFIX)/procps.cpp' object='procps.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o procps.o `test -f '$(TAR_PREFIX)/procps.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/procps.cpp

procps.obj: $(TAR_PREFIX)/procps.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT procps.obj -MD -MP -MF $(DEPDIR)/procps.Tpo -c -o procps.obj `if test -f '$(TAR_PREFIX)/procps.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/procps.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/procps.cpp'; fi`
	$(am__mv) $(DEPDIR)/procps.Tpo $(DEPDIR)/procps.Po
#	source='$(TAR_PREFIX)/procps.cpp' object='procps.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o procps.obj `if test -f '$(TAR_PREFIX)/procps.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/procps.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/procps.cpp'; fi`

xreadlink.o: $(TAR_PREFIX)/xreadlink.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xreadlink.o -MD -MP -MF $(DEPDIR)/xreadlink.Tpo -c -o xreadlink.o `test -f '$(TAR_PREFIX)/xreadlink.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xreadlink.cpp
	$(am__mv) $(DEPDIR)/xreadlink.Tpo $(DEPDIR)/xreadlink.Po
#	source='$(TAR_PREFIX)/xreadlink.cpp' object='xreadlink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xreadlink.o `test -f '$(TAR_PREFIX)/xreadlink.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xreadlink.cpp

xreadlink.obj: $(TAR_PREFIX)/xreadlink.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xreadlink.obj -MD -MP -MF $(DEPDIR)/xreadlink.Tpo -c -o xreadlink.obj `if test -f '$(TAR_PREFIX)/xreadlink.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xreadlink.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xreadlink.cpp'; fi`
	$(am__mv) $(DEPDIR)/xreadlink.Tpo $(DEPDIR)/xreadlink.Po
#	source='$(TAR_PREFIX)/xreadlink.cpp' object='xreadlink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xreadlink.obj `if test -f '$(TAR_PREFIX)/xreadlink.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xreadlink.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xreadlink.cpp'; fi`

safe_strncpy.o: $(TAR_PREFIX)/safe_strncpy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_strncpy.o -MD -MP -MF $(DEPDIR)/safe_strncpy.Tpo -c -o safe_strncpy.o `test -f '$(TAR_PREFIX)/safe_strncpy.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_strncpy.cpp
	$(am__mv) $(DEPDIR)/safe_strncpy.Tpo $(DEPDIR)/safe_strncpy.Po
#	source='$(TAR_PREFIX)/safe_strncpy.cpp' object='safe_strncpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_strncpy.o `test -f '$(TAR_PREFIX)/safe_strncpy.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_strncpy.cpp

safe_strncpy.obj: $(TAR_PREFIX)/safe_strncpy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_strncpy.obj -MD -MP -MF $(DEPDIR)/safe_strncpy.Tpo -c -o safe_strncpy.obj `if test -f '$(TAR_PREFIX)/safe_strncpy.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_strncpy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_strncpy.cpp'; fi`
	$(am__mv) $(DEPDIR)/safe_strncpy.Tpo $(DEPDIR)/safe_strncpy.Po
#	source='$(TAR_PREFIX)/safe_strncpy.cpp' object='safe_strncpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_strncpy.obj `if test -f '$(TAR_PREFIX)/safe_strncpy.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_strncpy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_strncpy.cpp'; fi`

get_header_tar.o: $(TAR_PREFIX)/get_header_tar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_header_tar.o -MD -MP -MF $(DEPDIR)/get_header_tar.Tpo -c -o get_header_tar.o `test -f '$(TAR_PREFIX)/get_header_tar.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_header_tar.cpp
	$(am__mv) $(DEPDIR)/get_header_tar.Tpo $(DEPDIR)/get_header_tar.Po
#	source='$(TAR_PREFIX)/get_header_tar.cpp' object='get_header_tar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_header_tar.o `test -f '$(TAR_PREFIX)/get_header_tar.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_header_tar.cpp

get_header_tar.obj: $(TAR_PREFIX)/get_header_tar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_header_tar.obj -MD -MP -MF $(DEPDIR)/get_header_tar.Tpo -c -o get_header_tar.obj `if test -f '$(TAR_PREFIX)/get_header_tar.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_header_tar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_header_tar.cpp'; fi`
	$(am__mv) $(DEPDIR)/get_header_tar.Tpo $(DEPDIR)/get_header_tar.Po
#	source='$(TAR_PREFIX)/get_header_tar.cpp' object='get_header_tar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_header_tar.obj `if test -f '$(TAR_PREFIX)/get_header_tar.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_header_tar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_header_tar.cpp'; fi`

copyfd.o: $(TAR_PREFIX)/copyfd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT copyfd.o -MD -MP -MF $(DEPDIR)/copyfd.Tpo -c -o copyfd.o `test -f '$(TAR_PREFIX)/copyfd.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/copyfd.cpp
	$(am__mv) $(DEPDIR)/copyfd.Tpo $(DEPDIR)/copyfd.Po
#	source='$(TAR_PREFIX)/copyfd.cpp' object='copyfd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o copyfd.o `test -f '$(TAR_PREFIX)/copyfd.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/copyfd.cpp

copyfd.obj: $(TAR_PREFIX)/copyfd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT copyfd.obj -MD -MP -MF $(DEPDIR)/copyfd.Tpo -c -o copyfd.obj `if test -f '$(TAR_PREFIX)/copyfd.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/copyfd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/copyfd.cpp'; fi`
	$(am__mv) $(DEPDIR)/copyfd.Tpo $(DEPDIR)/copyfd.Po
#	source='$(TAR_PREFIX)/copyfd.cpp' object='copyfd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o copyfd.obj `if test -f '$(TAR_PREFIX)/copyfd.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/copyfd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/copyfd.cpp'; fi`

find_list_entry.o: $(TAR_PREFIX)/find_list_entry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_list_entry.o -MD -MP -MF $(DEPDIR)/find_list_entry.Tpo -c -o find_list_entry.o `test -f '$(TAR_PREFIX)/find_list_entry.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/find_list_entry.cpp
	$(am__mv) $(DEPDIR)/find_list_entry.Tpo $(DEPDIR)/find_list_entry.Po
#	source='$(TAR_PREFIX)/find_list_entry.cpp' object='find_list_entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_list_entry.o `test -f '$(TAR_PREFIX)/find_list_entry.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/find_list_entry.cpp

find_list_entry.obj: $(TAR_PREFIX)/find_list_entry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT find_list_entry.obj -MD -MP -MF $(DEPDIR)/find_list_entry.Tpo -c -o find_list_entry.obj `if test -f '$(TAR_PREFIX)/find_list_entry.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/find_list_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/find_list_entry.cpp'; fi`
	$(am__mv) $(DEPDIR)/find_list_entry.Tpo $(DEPDIR)/find_list_entry.Po
#	source='$(TAR_PREFIX)/find_list_entry.cpp' object='find_list_entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o find_list_entry.obj `if test -f '$(TAR_PREFIX)/find_list_entry.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/find_list_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/find_list_entry.cpp'; fi`

header_verbose_list.o: $(TAR_PREFIX)/header_verbose_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_verbose_list.o -MD -MP -MF $(DEPDIR)/header_verbose_list.Tpo -c -o header_verbose_list.o `test -f '$(TAR_PREFIX)/header_verbose_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_verbose_list.cpp
	$(am__mv) $(DEPDIR)/header_verbose_list.Tpo $(DEPDIR)/header_verbose_list.Po
#	source='$(TAR_PREFIX)/header_verbose_list.cpp' object='header_verbose_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_verbose_list.o `test -f '$(TAR_PREFIX)/header_verbose_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_verbose_list.cpp

header_verbose_list.obj: $(TAR_PREFIX)/header_verbose_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_verbose_list.obj -MD -MP -MF $(DEPDIR)/header_verbose_list.Tpo -c -o header_verbose_list.obj `if test -f '$(TAR_PREFIX)/header_verbose_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_verbose_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_verbose_list.cpp'; fi`
	$(am__mv) $(DEPDIR)/header_verbose_list.Tpo $(DEPDIR)/header_verbose_list.Po
#	source='$(TAR_PREFIX)/header_verbose_list.cpp' object='header_verbose_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_verbose_list.obj `if test -f '$(TAR_PREFIX)/header_verbose_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_verbose_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_verbose_list.cpp'; fi`

recursive_action.o: $(TAR_PREFIX)/recursive_action.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT recursive_action.o -MD -MP -MF $(DEPDIR)/recursive_action.Tpo -c -o recursive_action.o `test -f '$(TAR_PREFIX)/recursive_action.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/recursive_action.cpp
	$(am__mv) $(DEPDIR)/recursive_action.Tpo $(DEPDIR)/recursive_action.Po
#	source='$(TAR_PREFIX)/recursive_action.cpp' object='recursive_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o recursive_action.o `test -f '$(TAR_PREFIX)/recursive_action.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/recursive_action.cpp

recursive_action.obj: $(TAR_PREFIX)/recursive_action.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT recursive_action.obj -MD -MP -MF $(DEPDIR)/recursive_action.Tpo -c -o recursive_action.obj `if test -f '$(TAR_PREFIX)/recursive_action.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/recursive_action.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/recursive_action.cpp'; fi`
	$(am__mv) $(DEPDIR)/recursive_action.Tpo $(DEPDIR)/recursive_action.Po
#	source='$(TAR_PREFIX)/recursive_action.cpp' object='recursive_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o recursive_action.obj `if test -f '$(TAR_PREFIX)/recursive_action.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/recursive_action.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/recursive_action.cpp'; fi`

init_handle.o: $(TAR_PREFIX)/init_handle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT init_handle.o -MD -MP -MF $(DEPDIR)/init_handle.Tpo -c -o init_handle.o `test -f '$(TAR_PREFIX)/init_handle.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/init_handle.cpp
	$(am__mv) $(DEPDIR)/init_handle.Tpo $(DEPDIR)/init_handle.Po
#	source='$(TAR_PREFIX)/init_handle.cpp' object='init_handle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o init_handle.o `test -f '$(TAR_PREFIX)/init_handle.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/init_handle.cpp

init_handle.obj: $(TAR_PREFIX)/init_handle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT init_handle.obj -MD -MP -MF $(DEPDIR)/init_handle.Tpo -c -o init_handle.obj `if test -f '$(TAR_PREFIX)/init_handle.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/init_handle.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/init_handle.cpp'; fi`
	$(am__mv) $(DEPDIR)/init_handle.Tpo $(DEPDIR)/init_handle.Po
#	source='$(TAR_PREFIX)/init_handle.cpp' object='init_handle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o init_handle.obj `if test -f '$(TAR_PREFIX)/init_handle.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/init_handle.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/init_handle.cpp'; fi`

header_list.o: $(TAR_PREFIX)/header_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_list.o -MD -MP -MF $(DEPDIR)/header_list.Tpo -c -o header_list.o `test -f '$(TAR_PREFIX)/header_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_list.cpp
	$(am__mv) $(DEPDIR)/header_list.Tpo $(DEPDIR)/header_list.Po
#	source='$(TAR_PREFIX)/header_list.cpp' object='header_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_list.o `test -f '$(TAR_PREFIX)/header_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_list.cpp

header_list.obj: $(TAR_PREFIX)/header_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_list.obj -MD -MP -MF $(DEPDIR)/header_list.Tpo -c -o header_list.obj `if test -f '$(TAR_PREFIX)/header_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_list.cpp'; fi`
	$(am__mv) $(DEPDIR)/header_list.Tpo $(DEPDIR)/header_list.Po
#	source='$(TAR_PREFIX)/header_list.cpp' object='header_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_list.obj `if test -f '$(TAR_PREFIX)/header_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_list.cpp'; fi`

seek_by_read.o: $(TAR_PREFIX)/seek_by_read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT seek_by_read.o -MD -MP -MF $(DEPDIR)/seek_by_read.Tpo -c -o seek_by_read.o `test -f '$(TAR_PREFIX)/seek_by_read.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/seek_by_read.cpp
	$(am__mv) $(DEPDIR)/seek_by_read.Tpo $(DEPDIR)/seek_by_read.Po
#	source='$(TAR_PREFIX)/seek_by_read.cpp' object='seek_by_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o seek_by_read.o `test -f '$(TAR_PREFIX)/seek_by_read.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/seek_by_read.cpp

seek_by_read.obj: $(TAR_PREFIX)/seek_by_read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT seek_by_read.obj -MD -MP -MF $(DEPDIR)/seek_by_read.Tpo -c -o seek_by_read.obj `if test -f '$(TAR_PREFIX)/seek_by_read.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/seek_by_read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/seek_by_read.cpp'; fi`
	$(am__mv) $(DEPDIR)/seek_by_read.Tpo $(DEPDIR)/seek_by_read.Po
#	source='$(TAR_PREFIX)/seek_by_read.cpp' object='seek_by_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o seek_by_read.obj `if test -f '$(TAR_PREFIX)/seek_by_read.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/seek_by_read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/seek_by_read.cpp'; fi`

data_extract_all.o: $(TAR_PREFIX)/data_extract_all.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_extract_all.o -MD -MP -MF $(DEPDIR)/data_extract_all.Tpo -c -o data_extract_all.o `test -f '$(TAR_PREFIX)/data_extract_all.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_extract_all.cpp
	$(am__mv) $(DEPDIR)/data_extract_all.Tpo $(DEPDIR)/data_extract_all.Po
#	source='$(TAR_PREFIX)/data_extract_all.cpp' object='data_extract_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_extract_all.o `test -f '$(TAR_PREFIX)/data_extract_all.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_extract_all.cpp

data_extract_all.obj: $(TAR_PREFIX)/data_extract_all.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_extract_all.obj -MD -MP -MF $(DEPDIR)/data_extract_all.Tpo -c -o data_extract_all.obj `if test -f '$(TAR_PREFIX)/data_extract_all.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_extract_all.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_extract_all.cpp'; fi`
	$(am__mv) $(DEPDIR)/data_extract_all.Tpo $(DEPDIR)/data_extract_all.Po
#	source='$(TAR_PREFIX)/data_extract_all.cpp' object='data_extract_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_extract_all.obj `if test -f '$(TAR_PREFIX)/data_extract_all.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_extract_all.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_extract_all.cpp'; fi`

filter_accept_reject_list.o: $(TAR_PREFIX)/filter_accept_reject_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_accept_reject_list.o -MD -MP -MF $(DEPDIR)/filter_accept_reject_list.Tpo -c -o filter_accept_reject_list.o `test -f '$(TAR_PREFIX)/filter_accept_reject_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/filter_accept_reject_list.cpp
	$(am__mv) $(DEPDIR)/filter_accept_reject_list.Tpo $(DEPDIR)/filter_accept_reject_list.Po
#	source='$(TAR_PREFIX)/filter_accept_reject_list.cpp' object='filter_accept_reject_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_accept_reject_list.o `test -f '$(TAR_PREFIX)/filter_accept_reject_list.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/filter_accept_reject_list.cpp

filter_accept_reject_list.obj: $(TAR_PREFIX)/filter_accept_reject_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_accept_reject_list.obj -MD -MP -MF $(DEPDIR)/filter_accept_reject_list.Tpo -c -o filter_accept_reject_list.obj `if test -f '$(TAR_PREFIX)/filter_accept_reject_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/filter_accept_reject_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/filter_accept_reject_list.cpp'; fi`
	$(am__mv) $(DEPDIR)/filter_accept_reject_list.Tpo $(DEPDIR)/filter_accept_reject_list.Po
#	source='$(TAR_PREFIX)/filter_accept_reject_list.cpp' object='filter_accept_reject_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_accept_reject_list.obj `if test -f '$(TAR_PREFIX)/filter_accept_reject_list.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/filter_accept_reject_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/filter_accept_reject_list.cpp'; fi`

data_extract_to_stdout.o: $(TAR_PREFIX)/data_extract_to_stdout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_extract_to_stdout.o -MD -MP -MF $(DEPDIR)/data_extract_to_stdout.Tpo -c -o data_extract_to_stdout.o `test -f '$(TAR_PREFIX)/data_extract_to_stdout.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_extract_to_stdout.cpp
	$(am__mv) $(DEPDIR)/data_extract_to_stdout.Tpo $(DEPDIR)/data_extract_to_stdout.Po
#	source='$(TAR_PREFIX)/data_extract_to_stdout.cpp' object='data_extract_to_stdout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_extract_to_stdout.o `test -f '$(TAR_PREFIX)/data_extract_to_stdout.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_extract_to_stdout.cpp

data_extract_to_stdout.obj: $(TAR_PREFIX)/data_extract_to_stdout.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_extract_to_stdout.obj -MD -MP -MF $(DEPDIR)/data_extract_to_stdout.Tpo -c -o data_extract_to_stdout.obj `if test -f '$(TAR_PREFIX)/data_extract_to_stdout.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_extract_to_stdout.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_extract_to_stdout.cpp'; fi`
	$(am__mv) $(DEPDIR)/data_extract_to_stdout.Tpo $(DEPDIR)/data_extract_to_stdout.Po
#	source='$(TAR_PREFIX)/data_extract_to_stdout.cpp' object='data_extract_to_stdout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_extract_to_stdout.obj `if test -f '$(TAR_PREFIX)/data_extract_to_stdout.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_extract_to_stdout.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_extract_to_stdout.cpp'; fi`

data_skip.o: $(TAR_PREFIX)/data_skip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_skip.o -MD -MP -MF $(DEPDIR)/data_skip.Tpo -c -o data_skip.o `test -f '$(TAR_PREFIX)/data_skip.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_skip.cpp
	$(am__mv) $(DEPDIR)/data_skip.Tpo $(DEPDIR)/data_skip.Po
#	source='$(TAR_PREFIX)/data_skip.cpp' object='data_skip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_skip.o `test -f '$(TAR_PREFIX)/data_skip.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_skip.cpp

data_skip.obj: $(TAR_PREFIX)/data_skip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_skip.obj -MD -MP -MF $(DEPDIR)/data_skip.Tpo -c -o data_skip.obj `if test -f '$(TAR_PREFIX)/data_skip.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_skip.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_skip.cpp'; fi`
	$(am__mv) $(DEPDIR)/data_skip.Tpo $(DEPDIR)/data_skip.Po
#	source='$(TAR_PREFIX)/data_skip.cpp' object='data_skip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_skip.obj `if test -f '$(TAR_PREFIX)/data_skip.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_skip.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_skip.cpp'; fi`

make_directory.o: $(TAR_PREFIX)/make_directory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT make_directory.o -MD -MP -MF $(DEPDIR)/make_directory.Tpo -c -o make_directory.o `test -f '$(TAR_PREFIX)/make_directory.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/make_directory.cpp
	$(am__mv) $(DEPDIR)/make_directory.Tpo $(DEPDIR)/make_directory.Po
#	source='$(TAR_PREFIX)/make_directory.cpp' object='make_directory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o make_directory.o `test -f '$(TAR_PREFIX)/make_directory.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/make_directory.cpp

make_directory.obj: $(TAR_PREFIX)/make_directory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT make_directory.obj -MD -MP -MF $(DEPDIR)/make_directory.Tpo -c -o make_directory.obj `if test -f '$(TAR_PREFIX)/make_directory.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/make_directory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/make_directory.cpp'; fi`
	$(am__mv) $(DEPDIR)/make_directory.Tpo $(DEPDIR)/make_directory.Po
#	source='$(TAR_PREFIX)/make_directory.cpp' object='make_directory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o make_directory.obj `if test -f '$(TAR_PREFIX)/make_directory.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/make_directory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/make_directory.cpp'; fi`

seek_by_jump.o: $(TAR_PREFIX)/seek_by_jump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT seek_by_jump.o -MD -MP -MF $(DEPDIR)/seek_by_jump.Tpo -c -o seek_by_jump.o `test -f '$(TAR_PREFIX)/seek_by_jump.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/seek_by_jump.cpp
	$(am__mv) $(DEPDIR)/seek_by_jump.Tpo $(DEPDIR)/seek_by_jump.Po
#	source='$(TAR_PREFIX)/seek_by_jump.cpp' object='seek_by_jump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o seek_by_jump.o `test -f '$(TAR_PREFIX)/seek_by_jump.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/seek_by_jump.cpp

seek_by_jump.obj: $(TAR_PREFIX)/seek_by_jump.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT seek_by_jump.obj -MD -MP -MF $(DEPDIR)/seek_by_jump.Tpo -c -o seek_by_jump.obj `if test -f '$(TAR_PREFIX)/seek_by_jump.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/seek_by_jump.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/seek_by_jump.cpp'; fi`
	$(am__mv) $(DEPDIR)/seek_by_jump.Tpo $(DEPDIR)/seek_by_jump.Po
#	source='$(TAR_PREFIX)/seek_by_jump.cpp' object='seek_by_jump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o seek_by_jump.obj `if test -f '$(TAR_PREFIX)/seek_by_jump.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/seek_by_jump.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/seek_by_jump.cpp'; fi`

filter_accept_all.o: $(TAR_PREFIX)/filter_accept_all.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_accept_all.o -MD -MP -MF $(DEPDIR)/filter_accept_all.Tpo -c -o filter_accept_all.o `test -f '$(TAR_PREFIX)/filter_accept_all.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/filter_accept_all.cpp
	$(am__mv) $(DEPDIR)/filter_accept_all.Tpo $(DEPDIR)/filter_accept_all.Po
#	source='$(TAR_PREFIX)/filter_accept_all.cpp' object='filter_accept_all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_accept_all.o `test -f '$(TAR_PREFIX)/filter_accept_all.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/filter_accept_all.cpp

filter_accept_all.obj: $(TAR_PREFIX)/filter_accept_all.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filter_accept_all.obj -MD -MP -MF $(DEPDIR)/filter_accept_all.Tpo -c -o filter_accept_all.obj `if test -f '$(TAR_PREFIX)/filter_accept_all.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/filter_accept_all.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/filter_accept_all.cpp'; fi`
	$(am__mv) $(DEPDIR)/filter_accept_all.Tpo $(DEPDIR)/filter_accept_all.Po
#	source='$(TAR_PREFIX)/filter_accept_all.cpp' object='filter_accept_all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filter_accept_all.obj `if test -f '$(TAR_PREFIX)/filter_accept_all.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/filter_accept_all.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/filter_accept_all.cpp'; fi`

header_skip.o: $(TAR_PREFIX)/header_skip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_skip.o -MD -MP -MF $(DEPDIR)/header_skip.Tpo -c -o header_skip.o `test -f '$(TAR_PREFIX)/header_skip.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_skip.cpp
	$(am__mv) $(DEPDIR)/header_skip.Tpo $(DEPDIR)/header_skip.Po
#	source='$(TAR_PREFIX)/header_skip.cpp' object='header_skip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_skip.o `test -f '$(TAR_PREFIX)/header_skip.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/header_skip.cpp

header_skip.obj: $(TAR_PREFIX)/header_skip.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT header_skip.obj -MD -MP -MF $(DEPDIR)/header_skip.Tpo -c -o header_skip.obj `if test -f '$(TAR_PREFIX)/header_skip.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_skip.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_skip.cpp'; fi`
	$(am__mv) $(DEPDIR)/header_skip.Tpo $(DEPDIR)/header_skip.Po
#	source='$(TAR_PREFIX)/header_skip.cpp' object='header_skip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o header_skip.obj `if test -f '$(TAR_PREFIX)/header_skip.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/header_skip.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/header_skip.cpp'; fi`

concat_subpath_file.o: $(TAR_PREFIX)/concat_subpath_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT concat_subpath_file.o -MD -MP -MF $(DEPDIR)/concat_subpath_file.Tpo -c -o concat_subpath_file.o `test -f '$(TAR_PREFIX)/concat_subpath_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/concat_subpath_file.cpp
	$(am__mv) $(DEPDIR)/concat_subpath_file.Tpo $(DEPDIR)/concat_subpath_file.Po
#	source='$(TAR_PREFIX)/concat_subpath_file.cpp' object='concat_subpath_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o concat_subpath_file.o `test -f '$(TAR_PREFIX)/concat_subpath_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/concat_subpath_file.cpp

concat_subpath_file.obj: $(TAR_PREFIX)/concat_subpath_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT concat_subpath_file.obj -MD -MP -MF $(DEPDIR)/concat_subpath_file.Tpo -c -o concat_subpath_file.obj `if test -f '$(TAR_PREFIX)/concat_subpath_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/concat_subpath_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/concat_subpath_file.cpp'; fi`
	$(am__mv) $(DEPDIR)/concat_subpath_file.Tpo $(DEPDIR)/concat_subpath_file.Po
#	source='$(TAR_PREFIX)/concat_subpath_file.cpp' object='concat_subpath_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o concat_subpath_file.obj `if test -f '$(TAR_PREFIX)/concat_subpath_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/concat_subpath_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/concat_subpath_file.cpp'; fi`

concat_path_file.o: $(TAR_PREFIX)/concat_path_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT concat_path_file.o -MD -MP -MF $(DEPDIR)/concat_path_file.Tpo -c -o concat_path_file.o `test -f '$(TAR_PREFIX)/concat_path_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/concat_path_file.cpp
	$(am__mv) $(DEPDIR)/concat_path_file.Tpo $(DEPDIR)/concat_path_file.Po
#	source='$(TAR_PREFIX)/concat_path_file.cpp' object='concat_path_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o concat_path_file.o `test -f '$(TAR_PREFIX)/concat_path_file.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/concat_path_file.cpp

concat_path_file.obj: $(TAR_PREFIX)/concat_path_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT concat_path_file.obj -MD -MP -MF $(DEPDIR)/concat_path_file.Tpo -c -o concat_path_file.obj `if test -f '$(TAR_PREFIX)/concat_path_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/concat_path_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/concat_path_file.cpp'; fi`
	$(am__mv) $(DEPDIR)/concat_path_file.Tpo $(DEPDIR)/concat_path_file.Po
#	source='$(TAR_PREFIX)/concat_path_file.cpp' object='concat_path_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o concat_path_file.obj `if test -f '$(TAR_PREFIX)/concat_path_file.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/concat_path_file.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/concat_path_file.cpp'; fi`

mode_string.o: $(TAR_PREFIX)/mode_string.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mode_string.o -MD -MP -MF $(DEPDIR)/mode_string.Tpo -c -o mode_string.o `test -f '$(TAR_PREFIX)/mode_string.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/mode_string.cpp
	$(am__mv) $(DEPDIR)/mode_string.Tpo $(DEPDIR)/mode_string.Po
#	source='$(TAR_PREFIX)/mode_string.cpp' object='mode_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mode_string.o `test -f '$(TAR_PREFIX)/mode_string.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/mode_string.cpp

mode_string.obj: $(TAR_PREFIX)/mode_string.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mode_string.obj -MD -MP -MF $(DEPDIR)/mode_string.Tpo -c -o mode_string.obj `if test -f '$(TAR_PREFIX)/mode_string.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/mode_string.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/mode_string.cpp'; fi`
	$(am__mv) $(DEPDIR)/mode_string.Tpo $(DEPDIR)/mode_string.Po
#	source='$(TAR_PREFIX)/mode_string.cpp' object='mode_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mode_string.obj `if test -f '$(TAR_PREFIX)/mode_string.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/mode_string.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/mode_string.cpp'; fi`

xfuncs.o: $(TAR_PREFIX)/xfuncs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfuncs.o -MD -MP -MF $(DEPDIR)/xfuncs.Tpo -c -o xfuncs.o `test -f '$(TAR_PREFIX)/xfuncs.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfuncs.cpp
	$(am__mv) $(DEPDIR)/xfuncs.Tpo $(DEPDIR)/xfuncs.Po
#	source='$(TAR_PREFIX)/xfuncs.cpp' object='xfuncs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfuncs.o `test -f '$(TAR_PREFIX)/xfuncs.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xfuncs.cpp

xfuncs.obj: $(TAR_PREFIX)/xfuncs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xfuncs.obj -MD -MP -MF $(DEPDIR)/xfuncs.Tpo -c -o xfuncs.obj `if test -f '$(TAR_PREFIX)/xfuncs.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfuncs.cpp'; fi`
	$(am__mv) $(DEPDIR)/xfuncs.Tpo $(DEPDIR)/xfuncs.Po
#	source='$(TAR_PREFIX)/xfuncs.cpp' object='xfuncs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xfuncs.obj `if test -f '$(TAR_PREFIX)/xfuncs.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xfuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xfuncs.cpp'; fi`

full_write.o: $(TAR_PREFIX)/full_write.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT full_write.o -MD -MP -MF $(DEPDIR)/full_write.Tpo -c -o full_write.o `test -f '$(TAR_PREFIX)/full_write.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/full_write.cpp
	$(am__mv) $(DEPDIR)/full_write.Tpo $(DEPDIR)/full_write.Po
#	source='$(TAR_PREFIX)/full_write.cpp' object='full_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o full_write.o `test -f '$(TAR_PREFIX)/full_write.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/full_write.cpp

full_write.obj: $(TAR_PREFIX)/full_write.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT full_write.obj -MD -MP -MF $(DEPDIR)/full_write.Tpo -c -o full_write.obj `if test -f '$(TAR_PREFIX)/full_write.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/full_write.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/full_write.cpp'; fi`
	$(am__mv) $(DEPDIR)/full_write.Tpo $(DEPDIR)/full_write.Po
#	source='$(TAR_PREFIX)/full_write.cpp' object='full_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o full_write.obj `if test -f '$(TAR_PREFIX)/full_write.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/full_write.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/full_write.cpp'; fi`

xatonum.o: $(TAR_PREFIX)/xatonum.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xatonum.o -MD -MP -MF $(DEPDIR)/xatonum.Tpo -c -o xatonum.o `test -f '$(TAR_PREFIX)/xatonum.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xatonum.cpp
	$(am__mv) $(DEPDIR)/xatonum.Tpo $(DEPDIR)/xatonum.Po
#	source='$(TAR_PREFIX)/xatonum.cpp' object='xatonum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xatonum.o `test -f '$(TAR_PREFIX)/xatonum.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xatonum.cpp

xatonum.obj: $(TAR_PREFIX)/xatonum.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xatonum.obj -MD -MP -MF $(DEPDIR)/xatonum.Tpo -c -o xatonum.obj `if test -f '$(TAR_PREFIX)/xatonum.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xatonum.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xatonum.cpp'; fi`
	$(am__mv) $(DEPDIR)/xatonum.Tpo $(DEPDIR)/xatonum.Po
#	source='$(TAR_PREFIX)/xatonum.cpp' object='xatonum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xatonum.obj `if test -f '$(TAR_PREFIX)/xatonum.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xatonum.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xatonum.cpp'; fi`

safe_write.o: $(TAR_PREFIX)/safe_write.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_write.o -MD -MP -MF $(DEPDIR)/safe_write.Tpo -c -o safe_write.o `test -f '$(TAR_PREFIX)/safe_write.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_write.cpp
	$(am__mv) $(DEPDIR)/safe_write.Tpo $(DEPDIR)/safe_write.Po
#	source='$(TAR_PREFIX)/safe_write.cpp' object='safe_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_write.o `test -f '$(TAR_PREFIX)/safe_write.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_write.cpp

safe_write.obj: $(TAR_PREFIX)/safe_write.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_write.obj -MD -MP -MF $(DEPDIR)/safe_write.Tpo -c -o safe_write.obj `if test -f '$(TAR_PREFIX)/safe_write.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_write.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_write.cpp'; fi`
	$(am__mv) $(DEPDIR)/safe_write.Tpo $(DEPDIR)/safe_write.Po
#	source='$(TAR_PREFIX)/safe_write.cpp' object='safe_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_write.obj `if test -f '$(TAR_PREFIX)/safe_write.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_write.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_write.cpp'; fi`

read_printf.o: $(TAR_PREFIX)/read_printf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read_printf.o -MD -MP -MF $(DEPDIR)/read_printf.Tpo -c -o read_printf.o `test -f '$(TAR_PREFIX)/read_printf.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/read_printf.cpp
	$(am__mv) $(DEPDIR)/read_printf.Tpo $(DEPDIR)/read_printf.Po
#	source='$(TAR_PREFIX)/read_printf.cpp' object='read_printf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read_printf.o `test -f '$(TAR_PREFIX)/read_printf.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/read_printf.cpp

read_printf.obj: $(TAR_PREFIX)/read_printf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read_printf.obj -MD -MP -MF $(DEPDIR)/read_printf.Tpo -c -o read_printf.obj `if test -f '$(TAR_PREFIX)/read_printf.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/read_printf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/read_printf.cpp'; fi`
	$(am__mv) $(DEPDIR)/read_printf.Tpo $(DEPDIR)/read_printf.Po
#	source='$(TAR_PREFIX)/read_printf.cpp' object='read_printf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read_printf.obj `if test -f '$(TAR_PREFIX)/read_printf.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/read_printf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/read_printf.cpp'; fi`

read.o: $(TAR_PREFIX)/read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read.o -MD -MP -MF $(DEPDIR)/read.Tpo -c -o read.o `test -f '$(TAR_PREFIX)/read.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/read.cpp
	$(am__mv) $(DEPDIR)/read.Tpo $(DEPDIR)/read.Po
#	source='$(TAR_PREFIX)/read.cpp' object='read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read.o `test -f '$(TAR_PREFIX)/read.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/read.cpp

read.obj: $(TAR_PREFIX)/read.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT read.obj -MD -MP -MF $(DEPDIR)/read.Tpo -c -o read.obj `if test -f '$(TAR_PREFIX)/read.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/read.cpp'; fi`
	$(am__mv) $(DEPDIR)/read.Tpo $(DEPDIR)/read.Po
#	source='$(TAR_PREFIX)/read.cpp' object='read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o read.obj `if test -f '$(TAR_PREFIX)/read.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/read.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/read.cpp'; fi`

bb_strtonum.o: $(TAR_PREFIX)/bb_strtonum.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bb_strtonum.o -MD -MP -MF $(DEPDIR)/bb_strtonum.Tpo -c -o bb_strtonum.o `test -f '$(TAR_PREFIX)/bb_strtonum.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/bb_strtonum.cpp
	$(am__mv) $(DEPDIR)/bb_strtonum.Tpo $(DEPDIR)/bb_strtonum.Po
#	source='$(TAR_PREFIX)/bb_strtonum.cpp' object='bb_strtonum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bb_strtonum.o `test -f '$(TAR_PREFIX)/bb_strtonum.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/bb_strtonum.cpp

bb_strtonum.obj: $(TAR_PREFIX)/bb_strtonum.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bb_strtonum.obj -MD -MP -MF $(DEPDIR)/bb_strtonum.Tpo -c -o bb_strtonum.obj `if test -f '$(TAR_PREFIX)/bb_strtonum.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/bb_strtonum.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/bb_strtonum.cpp'; fi`
	$(am__mv) $(DEPDIR)/bb_strtonum.Tpo $(DEPDIR)/bb_strtonum.Po
#	source='$(TAR_PREFIX)/bb_strtonum.cpp' object='bb_strtonum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bb_strtonum.obj `if test -f '$(TAR_PREFIX)/bb_strtonum.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/bb_strtonum.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/bb_strtonum.cpp'; fi`

data_align.o: $(TAR_PREFIX)/data_align.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_align.o -MD -MP -MF $(DEPDIR)/data_align.Tpo -c -o data_align.o `test -f '$(TAR_PREFIX)/data_align.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_align.cpp
	$(am__mv) $(DEPDIR)/data_align.Tpo $(DEPDIR)/data_align.Po
#	source='$(TAR_PREFIX)/data_align.cpp' object='data_align.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_align.o `test -f '$(TAR_PREFIX)/data_align.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/data_align.cpp

data_align.obj: $(TAR_PREFIX)/data_align.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT data_align.obj -MD -MP -MF $(DEPDIR)/data_align.Tpo -c -o data_align.obj `if test -f '$(TAR_PREFIX)/data_align.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_align.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_align.cpp'; fi`
	$(am__mv) $(DEPDIR)/data_align.Tpo $(DEPDIR)/data_align.Po
#	source='$(TAR_PREFIX)/data_align.cpp' object='data_align.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o data_align.obj `if test -f '$(TAR_PREFIX)/data_align.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/data_align.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/data_align.cpp'; fi`

safe_poll.o: $(TAR_PREFIX)/safe_poll.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_poll.o -MD -MP -MF $(DEPDIR)/safe_poll.Tpo -c -o safe_poll.o `test -f '$(TAR_PREFIX)/safe_poll.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_poll.cpp
	$(am__mv) $(DEPDIR)/safe_poll.Tpo $(DEPDIR)/safe_poll.Po
#	source='$(TAR_PREFIX)/safe_poll.cpp' object='safe_poll.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_poll.o `test -f '$(TAR_PREFIX)/safe_poll.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/safe_poll.cpp

safe_poll.obj: $(TAR_PREFIX)/safe_poll.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT safe_poll.obj -MD -MP -MF $(DEPDIR)/safe_poll.Tpo -c -o safe_poll.obj `if test -f '$(TAR_PREFIX)/safe_poll.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_poll.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_poll.cpp'; fi`
	$(am__mv) $(DEPDIR)/safe_poll.Tpo $(DEPDIR)/safe_poll.Po
#	source='$(TAR_PREFIX)/safe_poll.cpp' object='safe_poll.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o safe_poll.obj `if test -f '$(TAR_PREFIX)/safe_poll.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/safe_poll.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/safe_poll.cpp'; fi`

get_last_path_component.o: $(TAR_PREFIX)/get_last_path_component.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_last_path_component.o -MD -MP -MF $(DEPDIR)/get_last_path_component.Tpo -c -o get_last_path_component.o `test -f '$(TAR_PREFIX)/get_last_path_component.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_last_path_component.cpp
	$(am__mv) $(DEPDIR)/get_last_path_component.Tpo $(DEPDIR)/get_last_path_component.Po
#	source='$(TAR_PREFIX)/get_last_path_component.cpp' object='get_last_path_component.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_last_path_component.o `test -f '$(TAR_PREFIX)/get_last_path_component.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/get_last_path_component.cpp

get_last_path_component.obj: $(TAR_PREFIX)/get_last_path_component.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT get_last_path_component.obj -MD -MP -MF $(DEPDIR)/get_last_path_component.Tpo -c -o get_last_path_component.obj `if test -f '$(TAR_PREFIX)/get_last_path_component.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_last_path_component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_last_path_component.cpp'; fi`
	$(am__mv) $(DEPDIR)/get_last_path_component.Tpo $(DEPDIR)/get_last_path_component.Po
#	source='$(TAR_PREFIX)/get_last_path_component.cpp' object='get_last_path_component.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o get_last_path_component.obj `if test -f '$(TAR_PREFIX)/get_last_path_component.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/get_last_path_component.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/get_last_path_component.cpp'; fi`

platform.o: $(TAR_PREFIX)/platform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT platform.o -MD -MP -MF $(DEPDIR)/platform.Tpo -c -o platform.o `test -f '$(TAR_PREFIX)/platform.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/platform.cpp
	$(am__mv) $(DEPDIR)/platform.Tpo $(DEPDIR)/platform.Po
#	source='$(TAR_PREFIX)/platform.cpp' object='platform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o platform.o `test -f '$(TAR_PREFIX)/platform.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/platform.cpp

platform.obj: $(TAR_PREFIX)/platform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT platform.obj -MD -MP -MF $(DEPDIR)/platform.Tpo -c -o platform.obj `if test -f '$(TAR_PREFIX)/platform.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/platform.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/platform.cpp'; fi`
	$(am__mv) $(DEPDIR)/platform.Tpo $(DEPDIR)/platform.Po
#	source='$(TAR_PREFIX)/platform.cpp' object='platform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o platform.obj `if test -f '$(TAR_PREFIX)/platform.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/platform.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/platform.cpp'; fi`

xrealloc_vector.o: $(TAR_PREFIX)/xrealloc_vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xrealloc_vector.o -MD -MP -MF $(DEPDIR)/xrealloc_vector.Tpo -c -o xrealloc_vector.o `test -f '$(TAR_PREFIX)/xrealloc_vector.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xrealloc_vector.cpp
	$(am__mv) $(DEPDIR)/xrealloc_vector.Tpo $(DEPDIR)/xrealloc_vector.Po
#	source='$(TAR_PREFIX)/xrealloc_vector.cpp' object='xrealloc_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xrealloc_vector.o `test -f '$(TAR_PREFIX)/xrealloc_vector.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/xrealloc_vector.cpp

xrealloc_vector.obj: $(TAR_PREFIX)/xrealloc_vector.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT xrealloc_vector.obj -MD -MP -MF $(DEPDIR)/xrealloc_vector.Tpo -c -o xrealloc_vector.obj `if test -f '$(TAR_PREFIX)/xrealloc_vector.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xrealloc_vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xrealloc_vector.cpp'; fi`
	$(am__mv) $(DEPDIR)/xrealloc_vector.Tpo $(DEPDIR)/xrealloc_vector.Po
#	source='$(TAR_PREFIX)/xrealloc_vector.cpp' object='xrealloc_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o xrealloc_vector.obj `if test -f '$(TAR_PREFIX)/xrealloc_vector.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/xrealloc_vector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/xrealloc_vector.cpp'; fi`

bb_pwd.o: $(TAR_PREFIX)/bb_pwd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bb_pwd.o -MD -MP -MF $(DEPDIR)/bb_pwd.Tpo -c -o bb_pwd.o `test -f '$(TAR_PREFIX)/bb_pwd.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/bb_pwd.cpp
	$(am__mv) $(DEPDIR)/bb_pwd.Tpo $(DEPDIR)/bb_pwd.Po
#	source='$(TAR_PREFIX)/bb_pwd.cpp' object='bb_pwd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bb_pwd.o `test -f '$(TAR_PREFIX)/bb_pwd.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/bb_pwd.cpp

bb_pwd.obj: $(TAR_PREFIX)/bb_pwd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bb_pwd.obj -MD -MP -MF $(DEPDIR)/bb_pwd.Tpo -c -o bb_pwd.obj `if test -f '$(TAR_PREFIX)/bb_pwd.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/bb_pwd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/bb_pwd.cpp'; fi`
	$(am__mv) $(DEPDIR)/bb_pwd.Tpo $(DEPDIR)/bb_pwd.Po
#	source='$(TAR_PREFIX)/bb_pwd.cpp' object='bb_pwd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bb_pwd.obj `if test -f '$(TAR_PREFIX)/bb_pwd.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/bb_pwd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/bb_pwd.cpp'; fi`

appletlib.o: $(TAR_PREFIX)/appletlib.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT appletlib.o -MD -MP -MF $(DEPDIR)/appletlib.Tpo -c -o appletlib.o `test -f '$(TAR_PREFIX)/appletlib.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/appletlib.cpp
	$(am__mv) $(DEPDIR)/appletlib.Tpo $(DEPDIR)/appletlib.Po
#	source='$(TAR_PREFIX)/appletlib.cpp' object='appletlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o appletlib.o `test -f '$(TAR_PREFIX)/appletlib.cpp' || echo '$(srcdir)/'`$(TAR_PREFIX)/appletlib.cpp

appletlib.obj: $(TAR_PREFIX)/appletlib.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT appletlib.obj -MD -MP -MF $(DEPDIR)/appletlib.Tpo -c -o appletlib.obj `if test -f '$(TAR_PREFIX)/appletlib.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/appletlib.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/appletlib.cpp'; fi`
	$(am__mv) $(DEPDIR)/appletlib.Tpo $(DEPDIR)/appletlib.Po
#	source='$(TAR_PREFIX)/appletlib.cpp' object='appletlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o appletlib.obj `if test -f '$(TAR_PREFIX)/appletlib.cpp'; then $(CYGPATH_W) '$(TAR_PREFIX)/appletlib.cpp'; else $(CYGPATH_W) '$(srcdir)/$(TAR_PREFIX)/appletlib.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-sbinPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
